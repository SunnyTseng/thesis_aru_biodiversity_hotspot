mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity") +
guides(x = guide_axis_truncated(trunc_lower = c(-Inf, (effort_break$end[1] + 5)),
trunc_upper = c((effort_break$start[2] - 5), Inf)))
effort_all_2
(effort_break$end[1] + 5)
(effort_break$end[1] + 5) %>% class()
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity") +
guides(x = guide_axis_truncated(trunc_lower = c(-Inf, (effort_break$end[1] + 5)),
trunc_upper = c((effort_break$start[2] - 5), Inf)))
effort_all_2
trunc_lower = unit(c(0,.45), "npc")
trunc_lower
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity") +
guides(x = guide_axis_truncated(trunc_lower = c((effort_break$start[1] - 5), (effort_break$end[1] + 5)),
trunc_upper = c((effort_break$start[2] - 5), (effort_break$end[2] + 5))))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity") +
guides(x = guide_axis_truncated(trunc_lower = c((effort_break$start[1] - 5), (effort_break$end[1] + 5)),
trunc_upper = c((effort_break$start[2] - 5), (effort_break$end[2] + 5))))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity")
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity") +
facet_grid(rows = vars(date))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity") +
facet_grid(rows = vars(year))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date)
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% year)) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity") +
facet_grid(rows = vars(year))
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique())) %>%
ggplot(aes(x = date, y = ARUs)) +
geom_bar(stat = "identity") +
facet_grid(rows = vars(year))
effort_all_2
effort_all_1
effort_all_1$date[[1]]
effort_all_1$date[[1]] %>% md()
library(lubridate)
effort_all_1$date[[1]] %>% md()
effort_all_1$date[[1]] %>% day()
effort_all_1$date[[1]] %>% date()
effort_all_1$date[[1]] %>% yday()
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_bar(stat = "identity") +
facet_grid(rows = vars(year))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point() +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs, colour = year)) +
geom_line() +
geom_point()
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs, colour = year, group = year)) +
geom_line() +
geom_point()
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point() +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point() +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw()
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 23) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw()
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 18) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw()
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 15) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw()
effort_all_2
rm(list = ls())
### Import data
data <- read_csv(here("data", "detection_aru_target_sp_85.csv"))
n_sites <- data$site %>% n_distinct()
inc_data <- data %>%
group_nest(common_name)
inc_data
inc_data$data[[1]]
inc_data$data[[1]] %>% pull(scientific name)
inc_data$data[[1]] %>% colnames()
inc_data$data[[1]] %>% pull("scientific name")
inc_data$data[[1]] %>% pull("scientific name") %>% unique
inc_data$data[[1]] %>% pull("scientific name") %>% unique()
inc_data$data[[1]] %>% pull(site) %>% unique()
inc_data$data[[1]] %>% pull(site) %>% n_distinct()
inc_data <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()))
inc_data
inc_data <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
select(-data)
inc_data
data
data$site %>% n_distinct()
setNames(inc_data$n_sites, inc_data$common_name)
test <- setNames(inc_data$n_sites, inc_data$common_name)
test %>% length()
project_level[[1]] <- c(data$site %>% n_distinct(), setNames(inc_data$n_sites, inc_data$common_name))
project_level <- list()
project_level[[1]] <- c(data$site %>% n_distinct(), setNames(inc_data$n_sites, inc_data$common_name))
project_level
setNames(inc_data$n_sites, inc_data$common_name) %>% sort(decrasing = T)
setNames(inc_data$n_sites, inc_data$common_name) %>% sort(decreasing = T)
project_level[[1]] <- c(data$site %>% n_distinct(),
setNames(inc_data$n_sites, inc_data$common_name) %>% sort(decreasing = T))
project_level
names(project_level) <- "project_level"
project_level
### iNEXT
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
### Library
library(tidyverse)
library(here)
library(iNEXT)
### iNEXT
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p1 <- ggiNEXT(out, type=1)+ theme_classic() +   #  type 1 = the diversity estimator
labs(x = "Survey sites", y = "Richness")
out
p1 <- ggiNEXT(out, type=1)
p1 <- ggiNEXT(out, type=1, color.var = "Order.q")+ theme_classic() +   #  type 1 = the diversity estimator
labs(x = "Survey sites", y = "Richness")
p1
p1 <- ggiNEXT(out, type=1, color.var = "Order.q")+ theme_classic()
p1
p2 <- ggiNEXT(out, type=2)+ theme_classic() +    #  type 2 = the survey coverage
labs(x = "Survey sites")
p2 <- ggiNEXT(out, type=2, color.var = "Order.q")+ theme_classic() +    #  type 2 = the survey coverage
labs(x = "Survey sites")
p1 <- ggiNEXT(out, type=1, color.var = "Order.q") +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "Survey sites", y = "Richness")
p2 <- ggiNEXT(out, type=2, color.var = "Order.q") +
theme_classic() +    #  type 2 = the survey coverage
labs(x = "Survey sites")
grid.arrange(p1, p2, nrow = 1)
p2
library(patchwork)
p1 + p2
p1 <- ggiNEXT(out, type=1, color.var = "Order.q") +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "Survey sites", y = "Richness") +
theme(legend.position = "none")
p2 <- ggiNEXT(out, type=2, color.var = "Order.q") +
theme_classic() +    #  type 2 = the survey coverage
labs(x = "Survey sites") +
theme(legend.position = "none")
p1 + p2
project_level
### Library
library(tidyverse)
library(here)
library(iNEXT)
library(patchwork)
### Import data
data <- read_csv(here("data", "detection_aru_target_sp_85.csv"))
### Data wrangling to the iNEXT format - survey sites
n_sites <- data$site %>% n_distinct()
inc_data <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data$site %>% n_distinct(),
setNames(inc_data$n_sites, inc_data$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey sites
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p1 <- ggiNEXT(out, type=1, color.var = "Order.q") +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "Survey sites", y = "Richness") +
theme(legend.position = "none")
p2 <- ggiNEXT(out, type=2, color.var = "Order.q") +
theme_classic() +    #  type 2 = the survey coverage
labs(x = "Survey sites") +
theme(legend.position = "none")
p1 + p2
data
data %>% colnames()
data <- dat %>%
mutate(date = unite(year, month, day) %>% ymd())
### Import data
dat <- read_csv(here("data", "detection_aru_target_sp_85.csv"))
data <- dat %>%
mutate(date = unite(year, month, day) %>% ymd())
library(lubridate)
data <- dat %>%
mutate(date = unite(year, month, day) %>% ymd())
?unite()
data <- dat %>%
unite(year, month, day) %>%
mutate(date =  ymd(date))
data <- dat %>%
unite(year, month, day)
data
dat
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(year, month, day) %>%
mutate(date =  ymd(date))
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(year, month, day)
data
data <- dat %>%
mutate(year = as.character(year))
data
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(year, month, day)
data
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(col = c(year, month, day))
data
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(date, year, month, day) %>%
mutate(date =  ymd(date))
data
rm(list = ls())
### Library
library(tidyverse)
library(here)
library(iNEXT)
library(patchwork)
library(lubridate)
### Import data
dat <- read_csv(here("data", "detection_aru_target_sp_85.csv"))
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(date, year, month, day) %>%
mutate(date =  ymd(date))
### Data wrangling to the iNEXT format - survey sites
n_sites <- data$site %>% n_distinct()
inc_data <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data$site %>% n_distinct(),
setNames(inc_data$n_sites, inc_data$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey sites
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p1 <- ggiNEXT(out, type=1, color.var = "Order.q") +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "Survey sites", y = "Richness") +
theme(legend.position = "none")
p2 <- ggiNEXT(out, type=2, color.var = "Order.q") +
theme_classic() +    #  type 2 = the survey coverage
labs(x = "Survey sites") +
theme(legend.position = "none")
p1 + p2
p1 + p2
data
### Data wrangling to the iNEXT format - survey period
n_days <- data$date %>% n_distinct()
n_days
inc_data <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(date) %>% n_distinct())) %>%
select(-data)
inc_data
rm(list = ls())
### Import data
dat <- read_csv(here("data", "detection_aru_target_sp_85.csv"))
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(date, year, month, day) %>%
mutate(date =  ymd(date))
### Data wrangling to the iNEXT format - survey sites
inc_sites <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data$site %>% n_distinct(),
setNames(inc_data$n_sites, inc_data$common_name) %>% sort(decreasing = T))
project_level[[1]] <- c(data$site %>% n_distinct(),
setNames(inc_sites$n_sites, inc_sites$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### Data wrangling to the iNEXT format - survey period
inc_days <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(date) %>% n_distinct())) %>%
select(-data)
### Data wrangling to the iNEXT format - survey period
inc_days <- data %>%
group_nest(common_name) %>%
mutate(n_days = map_dbl(.x = data, .f =~ .x %>% pull(date) %>% n_distinct())) %>%
select(-data)
inc_days
project_level <- list()
project_level <- list()
project_level[[1]] <- c(data$date %>% n_distinct(),
setNames(inc_days$n_days, inc_days$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey period
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
project_level
p1 <- ggiNEXT(out, type=1, color.var = "Order.q") +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARU days", y = "Richness") +
theme(legend.position = "none")
p2 <- ggiNEXT(out, type=2, color.var = "Order.q") +
theme_classic() +    #  type 2 = the survey coverage
labs(x = "Survey sites") +
theme(legend.position = "none")
p1 + p2
p2 <- ggiNEXT(out, type=2, color.var = "Order.q") +
theme_classic() +    #  type 2 = the survey coverage
labs(x = "ARU days") +
theme(legend.position = "none")
p1 + p2
dat <- read_csv(here("data", "detection_aru_target_sp_85.csv"))
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(date, year, month, day) %>%
mutate(date =  ymd(date))
### Data wrangling to the iNEXT format - survey sites
inc_sites <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data$site %>% n_distinct(),
setNames(inc_sites$n_sites, inc_sites$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey sites
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p1 <- ggiNEXT(out, type=1, color.var = "Order.q") +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "Survey sites", y = "Richness") +
theme(legend.position = "none")
### Data wrangling to the iNEXT format - survey period
inc_days <- data %>%
group_nest(common_name) %>%
mutate(n_days = map_dbl(.x = data, .f =~ .x %>% pull(date) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data$date %>% n_distinct(),
setNames(inc_days$n_days, inc_days$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey period
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p2 <- ggiNEXT(out, type=1, color.var = "Order.q") +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARU days", y = "Richness") +
theme(legend.position = "none")
p1 + p2

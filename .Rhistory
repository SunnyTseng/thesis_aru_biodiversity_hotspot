scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
theme_light() +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
scale_fill_discrete(labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
scale_fill_manual(labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
scale_fill_discrete(labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
#scale_fill_discrete() +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", method = "Detected by")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", fill = "Detected by")
order_figure
theme(legend.position = "bottom")
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", fill = "Detected by") +
theme(legend.position = "bottom")
order_figure
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 15,
width = 20,
units = "cm",
dpi = 300)
splitComp("palegreen3")
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 15,
width = 28,
units = "cm",
dpi = 300)
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", fill = "Detected by") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = "bottom",
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 12,
width = 24,
units = "cm",
dpi = 300)
### Library
library(tidyverse)
library(here)
library(iNEXT)
library(patchwork)
library(lubridate)
### Import data
dat <- read_csv(here("data", "detection_aru_target_sp_85.csv"))
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(date, year, month, day) %>%
mutate(date =  ymd(date))
### Data wrangling to the iNEXT format - survey sites
inc_sites <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data$site %>% n_distinct(),
setNames(inc_sites$n_sites, inc_sites$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey sites
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p1 <- ggiNEXT(out, type=1,  grey = TRUE) +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARUs", y = "Richness") +
theme(legend.position = "none",
axis.text = element_text(size = 15, face = "bold"),
axis.title = element_text(size = 25, face = "bold"),
axis.line = element_line(linewidth = 2))
### Data wrangling to the iNEXT format - survey period
inc_days <- data %>%
group_nest(common_name) %>%
mutate(n_days = map_dbl(.x = data, .f =~ .x %>% select(date, site) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data %>% select(date, site) %>% n_distinct(),
setNames(inc_days$n_days, inc_days$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey period
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p2 <- ggiNEXT(out, type=1, grey = TRUE) +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARU days", y = "Richness") +
theme(legend.position = "none",
axis.text = element_text(size = 15, face = "bold"),
axis.title = element_text(size = 25, face = "bold"),
axis.line = element_line(linewidth = 2))
p2
p1 + p2
p2 <- ggiNEXT(out, type=1, grey = TRUE) +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARU days", y = "Richness") +
theme(legend.position = "none",
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(linewidth = 2))
p2
p2 <- ggiNEXT(out, type=1, grey = TRUE) +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARU days", y = "Richness") +
theme(legend.position = "none",
axis.text = element_text(size = 15, face = "bold"),
axis.title = element_text(size = 25, face = "bold"),
axis.line = element_line(linewidth = 2))
p2
p1 + p2
patch <- p1 + p2
ggsave(plot = patch,
filename = here("docs", "figures", "effort_all_2.png"),
height = 15,
width = 30,
units = "cm",
dpi = 300)
ggsave(plot = patch,
filename = here("docs", "figures", "patch.png"),
height = 15,
width = 30,
units = "cm",
dpi = 300)
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 10,
width = 20,
units = "cm",
dpi = 300)
### Library
library(tidyverse)
library(here)
library(lubridate)
library(ggh4x)
effort_list <- c("2020_passerine_effort.csv",
"2021_passerine_effort.csv",
"2022_passerine_effort.csv")
effort_all <- tibble()
for (file in effort_list) {
effort_temp <- read_csv(here("data", "JPRF_aru_effort", file))
effort_all <- rbind(effort_all, effort_temp)
}
effort_all_1 <- effort_all %>%
unite(col = date, year, month, day, remove = FALSE) %>%
mutate(date = ymd(date)) %>%
mutate(month = as.numeric(month),
day = as.numeric(day),
hour = as.numeric(hour),
minute = as.numeric(minute)) %>%
filter(size >= 5760000 & size <= 5760500,
year >= 2020 & year <= 2022,
month >= 5 & month <= 7,
hour %in% c(4, 5, 6),
minute %in% seq(0, 60, by = 5))
effort_break <- effort_all_1 %>%
group_by(year) %>%
summarize(start = min(date),
end = max(date))
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 16, alpha = 0.5) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw() +
labs(x = "Day of a year", y = "# of ARU") +
scale_y_continuous(breaks = c(10, 40)) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 10,
width = 20,
units = "cm",
dpi = 300)
###
### Library
###
library(seewave)
library(tuneR)
library(tidyverse)
library(here)
###
### Detection list from 2020, 2021, and 2022 passerine
###
file_names <- c("2020_passerine_BirdNET_updated.csv",
"2021_passerine_BirdNET.csv",
"2022_passerine_BirdNET.csv")
data_all <- tibble()
for (file in file_names){
data <- read_csv(here("data", "processed", file))
data_all <- bind_rows(data_all, data)
}
# clean out the detection with confidence higher than 0.85, got 126 unique species
data_all_0.85 <- data_all %>%
filter(confidence >= 0.85) %>%
mutate(common_name = case_when(
common_name == "Audubon's Warbler" ~ "Yellow-rumped Warbler",
common_name == "Northwestern Crow" ~ "American Crow",
common_name == "Slate-colored Fox Sparrow" ~ "Fox Sparrow",
common_name == "Sooty Fox Sparrow" ~ "Fox Sparrow",
TRUE ~ common_name)) %>%
mutate(common_name = if_else(common_name == "American Yellow Warbler", "Yellow Warbler", common_name))
# clean out the detection with confidence higher than 0.85, got 126 unique species
data_all_0.85_test <- data_all %>%
filter(confidence >= 0.85) %>%
mutate(common_name = case_when(
common_name == "Audubon's Warbler" ~ "Yellow-rumped Warbler",
common_name == "Northwestern Crow" ~ "American Crow",
common_name == "Slate-colored Fox Sparrow" ~ "Fox Sparrow",
common_name == "Sooty Fox Sparrow" ~ "Fox Sparrow",
common_name == "American Yellow Warbler" ~ "Yellow Warbler",
TRUE ~ common_name))
all_equal(data_all_0.85, data_all_0.85_test)
all.equal(data_all_0.85, data_all_0.85_test)
data_validated <- read_csv(here("data", "JPRF_species_list",  "species_aru_85_validation_1.csv"))
# make a list of potential recordings based on individual species (126 species for validation)
species_recording <- data_all_0.85 %>%
unite("recording_u", site, recording, start_s, end_s, sep = "_") %>%
arrange(desc(confidence)) %>%
group_nest(common_name) %>%
mutate(recording_1 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[1]),
recording_2 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[2]),
recording_3 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[3]),
recording_4 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[4]),
recording_5 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[5])) %>%
select(-data) # it's 129 now because I removed the Fox Sparrow.
# clean out the detection with confidence higher than 0.85, got 126 unique species
data_all_0.85 <- data_all %>%
filter(confidence >= 0.85) %>%
mutate(common_name = case_when(
common_name == "Audubon's Warbler" ~ "Yellow-rumped Warbler",
common_name == "Northwestern Crow" ~ "American Crow",
common_name == "Slate-colored Fox Sparrow" ~ "Fox Sparrow",
common_name == "Sooty Fox Sparrow" ~ "Fox Sparrow",
common_name == "American Yellow Warbler" ~ "Yellow Warbler",
TRUE ~ common_name)) %>%
mutate(common_name = if_else(common_name == "American Yellow Warbler", "Yellow Warbler", common_name))
# make a list of potential recordings based on individual species (126 species for validation)
species_recording <- data_all_0.85 %>%
unite("recording_u", site, recording, start_s, end_s, sep = "_") %>%
arrange(desc(confidence)) %>%
group_nest(common_name) %>%
mutate(recording_1 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[1]),
recording_2 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[2]),
recording_3 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[3]),
recording_4 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[4]),
recording_5 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[5])) %>%
select(-data) # it's 129 now because I removed the Fox Sparrow.
# clean out the detection with confidence higher than 0.85, got 126 unique species
data_all_0.85 <- data_all %>%
filter(confidence >= 0.85) %>%
mutate(common_name = case_when(
common_name == "Audubon's Warbler" ~ "Yellow-rumped Warbler",
common_name == "Northwestern Crow" ~ "American Crow",
common_name == "Slate-colored Fox Sparrow" ~ "Fox Sparrow",
common_name == "Sooty Fox Sparrow" ~ "Fox Sparrow",
#common_name == "American Yellow Warbler" ~ "Yellow Warbler",
TRUE ~ common_name)) %>%
mutate(common_name = if_else(common_name == "American Yellow Warbler", "Yellow Warbler", common_name))
# make a list of potential recordings based on individual species (126 species for validation)
species_recording <- data_all_0.85 %>%
unite("recording_u", site, recording, start_s, end_s, sep = "_") %>%
arrange(desc(confidence)) %>%
group_nest(common_name) %>%
mutate(recording_1 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[1]),
recording_2 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[2]),
recording_3 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[3]),
recording_4 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[4]),
recording_5 = map_chr(.x = data, .f =~ .x %>% pull(recording_u) %>% .[5])) %>%
select(-data) # it's 129 now because I removed the Fox Sparrow.
# clean out the detection with confidence higher than 0.85, got 126 unique species
data_all_0.85 <- data_all %>%
filter(confidence >= 0.85) %>%
mutate(common_name = case_when(
common_name == "Audubon's Warbler" ~ "Yellow-rumped Warbler",
common_name == "Northwestern Crow" ~ "American Crow",
common_name == "Slate-colored Fox Sparrow" ~ "Fox Sparrow",
common_name == "Sooty Fox Sparrow" ~ "Fox Sparrow",
common_name == "American Yellow Warbler" ~ "Yellow Warbler",
TRUE ~ common_name))
# clean out the detection with confidence higher than 0.85, got 126 unique species
data_all_0.85 <- data_all %>%
filter(confidence >= 0.85) %>%
mutate(common_name = case_when(
common_name == "Audubon's Warbler" ~ "Yellow-rumped Warbler",
common_name == "Northwestern Crow" ~ "American Crow",
common_name == "Slate-colored Fox Sparrow" ~ "Fox Sparrow",
common_name == "Sooty Fox Sparrow" ~ "Fox Sparrow",
common_name == "American Yellow Warbler" ~ "Yellow Warbler",
TRUE ~ common_name))
data_all_0.85$common_name %>% n_distinct()
data_all_0.85 %>% glimpse()
data_all_0.85 %>% n_distinct(scientific_name)
data_all_0.85$scientific_name %>% n_distinct()
data_all_0.85$common_name %>% n_distinct()
# Filter out the non-validated species and species (108) suggested by Ken that shouldn't be here (103)
data_validated <- read_csv(here("data", "JPRF_species_list",  "species_aru_85_validation_1.csv")) %>%
drop_na(best) %>%
filter(!common_name %in% c("Pygmy Nuthatch",
"Red-naped Sapsucker",
"Williamson's Sapsucker",
"Bay-breasted Warbler",
"Bushtit",
"American Tree Sparrow",
"Arctic Warbler",
"Blue-headed Vireo",
"Connecticut Warbler"))
data_validated
data_species <- data_all_0.85 %>%
mutate(confidence_cat = cut(confidence, breaks = seq(from = 0.1, to = 1.0, by = 0.15))) %>%
group_nest(common_name) %>%
mutate(c_10_25 = map_dbl(.x = data, .f =~ .x %>% filter(confidence_cat == "(0.1,0.25]") %>% nrow()),
c_25_40 = map_dbl(.x = data, .f =~ .x %>% filter(confidence_cat == "(0.25,0.4]") %>% nrow()),
c_40_55 = map_dbl(.x = data, .f =~ .x %>% filter(confidence_cat == "(0.4,0.55]") %>% nrow()),
c_55_70 = map_dbl(.x = data, .f =~ .x %>% filter(confidence_cat == "(0.55,0.7]") %>% nrow()),
c_70_85 = map_dbl(.x = data, .f =~ .x %>% filter(confidence_cat == "(0.7,0.85]") %>% nrow()),
c_85_100 = map_dbl(.x = data, .f =~ .x %>% filter(confidence_cat == "(0.85,1]") %>% nrow()),
n_ARU = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
mutate(c_10_25_2020 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2020) %>% filter(confidence_cat == "(0.1,0.25]") %>% nrow()),
c_25_40_2020 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2020) %>% filter(confidence_cat == "(0.25,0.4]") %>% nrow()),
c_40_55_2020 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2020) %>% filter(confidence_cat == "(0.4,0.55]") %>% nrow()),
c_55_70_2020 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2020) %>% filter(confidence_cat == "(0.55,0.7]") %>% nrow()),
c_70_85_2020 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2020) %>% filter(confidence_cat == "(0.7,0.85]") %>% nrow()),
c_85_100_2020 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2020) %>% filter(confidence_cat == "(0.85,1]") %>% nrow()),
n_ARU_2020 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2021) %>% pull(site) %>% n_distinct())) %>%
mutate(c_10_25_2021 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2021) %>% filter(confidence_cat == "(0.1,0.25]") %>% nrow()),
c_25_40_2021 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2021) %>% filter(confidence_cat == "(0.25,0.4]") %>% nrow()),
c_40_55_2021 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2021) %>% filter(confidence_cat == "(0.4,0.55]") %>% nrow()),
c_55_70_2021 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2021) %>% filter(confidence_cat == "(0.55,0.7]") %>% nrow()),
c_70_85_2021 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2021) %>% filter(confidence_cat == "(0.7,0.85]") %>% nrow()),
c_85_100_2021 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2021) %>% filter(confidence_cat == "(0.85,1]") %>% nrow()),
n_ARU_2021 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2021) %>% pull(site) %>% n_distinct())) %>%
mutate(c_10_25_2022 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2022) %>% filter(confidence_cat == "(0.1,0.25]") %>% nrow()),
c_25_40_2022 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2022) %>% filter(confidence_cat == "(0.25,0.4]") %>% nrow()),
c_40_55_2022 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2022) %>% filter(confidence_cat == "(0.4,0.55]") %>% nrow()),
c_55_70_2022 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2022) %>% filter(confidence_cat == "(0.55,0.7]") %>% nrow()),
c_70_85_2022 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2022) %>% filter(confidence_cat == "(0.7,0.85]") %>% nrow()),
c_85_100_2022 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2022) %>% filter(confidence_cat == "(0.85,1]") %>% nrow()),
n_ARU_2022 = map_dbl(.x = data, .f =~ .x %>% filter(year == 2022) %>% pull(site) %>% n_distinct())) %>%
select(-data)
data_species
data_validated_1 <- left_join(data_validated, data_species) %>%
left_join(clements_species, by = c("common_name" = "English name")) %>%
select(common_name, "scientific name", "order", "family", 14:41)
clements_species <- read_csv(here("data", "JPRF_species_list", "Clements-Checklist-v2022-October-2022.csv"))
data_validated_1 <- left_join(data_validated, data_species) %>%
left_join(clements_species, by = c("common_name" = "English name")) %>%
select(common_name, "scientific name", "order", "family", 14:41)
data_validated_1
# only keep the validated species
# only keep the date/site (effort) that has been properly functional
data_all_0.85_species <- data_all_0.85 %>%
filter(common_name %in% data_validated_1$common_name) %>%
left_join(clements_species, by = c("common_name" = "English name"))  %>%
mutate(month = as.numeric(month),
hour = str_sub(recording, start = 10, end = 11) %>% as.numeric(),
minute = str_sub(recording, start = 12, end = 13) %>% as.numeric()) %>%
filter(year >= 2020 & year <= 2022,
month >= 5 & month <= 7,
hour %in% c(4, 5, 6),
minute %in% seq(0, 60, by = 5)) %>%
select(year, month, day, site, recording, start_s, end_s, common_name, order, family, "scientific name")
data_all_0.85_species

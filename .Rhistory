legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 16, alpha = 0.5) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw() +
labs(x = "Day of a year", y = "# of ARU") +
scale_y_continuous(breaks = c(30, 60)) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 16, alpha = 0.5) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw() +
labs(x = "Day of a year", y = "# of ARU") +
scale_y_continuous(breaks = c(30)) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 16, alpha = 0.5) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw() +
labs(x = "Day of a year", y = "# of ARU") +
scale_y_continuous(breaks = c(20, 40)) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
effort_all_2
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 16, alpha = 0.5) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw() +
labs(x = "Day of a year", y = "# of ARU") +
scale_y_continuous(breaks = c(10, 40)) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
effort_all_2
ggsave(plot = effort_all_2,
filename = here("data", "figures", "effort_all_2.png"),
height = 12,
width = 20,
units = "cm",
dpi = 200)
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 12,
width = 20,
units = "cm",
dpi = 200)
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 12,
width = 28,
units = "cm",
dpi = 300)
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 8,
width = 22,
units = "cm",
dpi = 300)
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 8,
width = 20,
units = "cm",
dpi = 300)
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 10,
width = 20,
units = "cm",
dpi = 300)
# library
library(tidyverse)
library(here)
library(colortools)
library(iNEXT)
library(gridExtra)
# data import
data_ARU <- read_csv(here("data", "JPRF_species_list", "species_aru_85_validation_info_1.csv"))
data_eBird <- read_csv(here("data", "JPRF_species_list", "species_eBird_info.csv"))
data_ARU
# basic comparison with numbers
aru_only_species <- setdiff(data_ARU$common_name, data_eBird$species) # 31
eBird_only_species <- setdiff(data_eBird$species, data_ARU$common_name) # 24, mostly waterfowl
both_species <- intersect(data_eBird$species, data_ARU$common_name) # 69, these would be common species
all_species <- union(data_eBird$species, data_ARU$common_name) # 124 species in JPRF wooow!
# species list
data_list <- full_join(data_ARU, data_eBird, by = c("common_name" = "species", "scientific name", "order", "family")) %>%
arrange(order, family, best) %>%
mutate(ARU = if_else(is.na(best), "N", "Y"),
eBird = if_else(is.na(Jan), "N", "Y")) %>%
select(common_name, `scientific name`, order, family, ARU, c_85_100, eBird)
# comparison by orders
data_all <- full_join(data_ARU, data_eBird, by = c("common_name" = "species",
"scientific name",
"order",
"family")) %>%
group_nest(order) %>%
mutate(ARU = map_dbl(.x = data, .f =~ .x %>% select(c_10_25) %>% drop_na() %>% nrow()),
eBird = map_dbl(.x = data, .f =~ .x %>% select(Jan) %>% drop_na() %>% nrow()),
both = map_dbl(.x = data, .f =~ .x %>% drop_na(c_10_25, Jan) %>% nrow())) %>%
mutate(ARU_only = ARU - both,
eBird_only = eBird - both,
ARU_p = ARU/(ARU_only + eBird_only + both),
eBird_p = eBird/(ARU_only + eBird_only + both),
ARU_only_p = ARU_only/(ARU_only + eBird_only + both),
eBird_only_p = eBird_only/(ARU_only + eBird_only + both),
both_p = both/(ARU_only + eBird_only + both)) %>%
arrange(ARU_p, ARU_only_p) %>%
mutate(order = as_factor(order)) %>%
select(-data)
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
theme_light()
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
theme_light() +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
scale_fill_discrete(labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
scale_fill_manual(labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C")) +
scale_fill_discrete(labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
#scale_fill_discrete() +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Proportion", y = "Order", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", method = "Detected by") +
theme(legend.position = "bottom")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", method = "Detected by")
order_figure
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", fill = "Detected by")
order_figure
theme(legend.position = "bottom")
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", fill = "Detected by") +
theme(legend.position = "bottom")
order_figure
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 15,
width = 20,
units = "cm",
dpi = 300)
splitComp("palegreen3")
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 15,
width = 28,
units = "cm",
dpi = 300)
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
order_figure <- data_all %>%
select(order, eBird_only_p, both_p, ARU_only_p) %>%
pivot_longer(names_to = "method", cols = -order) %>%
ggplot(aes(fill = method, y = value, x = order)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
scale_y_reverse() +
scale_fill_manual(values = c("#A57CCD", "#CD7CA5", "#7CCD7C"),
labels = c("ARU only", "ARU and eBird", "eBird only")) +
theme_light() +
labs(x = "Order", y = "Proportion", fill = "Detected by") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = "bottom",
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
ggsave(plot = order_figure,
filename = here("docs", "figures", "order_figure.png"),
height = 12,
width = 24,
units = "cm",
dpi = 300)
### Library
library(tidyverse)
library(here)
library(iNEXT)
library(patchwork)
library(lubridate)
### Import data
dat <- read_csv(here("data", "detection_aru_target_sp_85.csv"))
data <- dat %>%
mutate(year = as.character(year)) %>%
unite(date, year, month, day) %>%
mutate(date =  ymd(date))
### Data wrangling to the iNEXT format - survey sites
inc_sites <- data %>%
group_nest(common_name) %>%
mutate(n_sites = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data$site %>% n_distinct(),
setNames(inc_sites$n_sites, inc_sites$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey sites
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p1 <- ggiNEXT(out, type=1,  grey = TRUE) +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARUs", y = "Richness") +
theme(legend.position = "none",
axis.text = element_text(size = 15, face = "bold"),
axis.title = element_text(size = 25, face = "bold"),
axis.line = element_line(linewidth = 2))
### Data wrangling to the iNEXT format - survey period
inc_days <- data %>%
group_nest(common_name) %>%
mutate(n_days = map_dbl(.x = data, .f =~ .x %>% select(date, site) %>% n_distinct())) %>%
select(-data)
project_level <- list()
project_level[[1]] <- c(data %>% select(date, site) %>% n_distinct(),
setNames(inc_days$n_days, inc_days$common_name) %>% sort(decreasing = T))
names(project_level) <- "project_level"
### iNEXT - survey period
out <- iNEXT(project_level,          # The data frame
q=0,                    # The type of diversity estimator (see discussion of the options below)
datatype="incidence_freq",   # The type of analysis
knots=40,                    # The number of data points in your line (more = smoother)
se=TRUE,                     # Logical statement if you want confidence intervals
conf=0.95,                   # The level of confidence intervals
nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time
p2 <- ggiNEXT(out, type=1, grey = TRUE) +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARU days", y = "Richness") +
theme(legend.position = "none",
axis.text = element_text(size = 15, face = "bold"),
axis.title = element_text(size = 25, face = "bold"),
axis.line = element_line(linewidth = 2))
p2
p1 + p2
p2 <- ggiNEXT(out, type=1, grey = TRUE) +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARU days", y = "Richness") +
theme(legend.position = "none",
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(linewidth = 2))
p2
p2 <- ggiNEXT(out, type=1, grey = TRUE) +
theme_classic() +   #  type 1 = the diversity estimator
labs(x = "ARU days", y = "Richness") +
theme(legend.position = "none",
axis.text = element_text(size = 15, face = "bold"),
axis.title = element_text(size = 25, face = "bold"),
axis.line = element_line(linewidth = 2))
p2
p1 + p2
patch <- p1 + p2
ggsave(plot = patch,
filename = here("docs", "figures", "effort_all_2.png"),
height = 15,
width = 30,
units = "cm",
dpi = 300)
ggsave(plot = patch,
filename = here("docs", "figures", "patch.png"),
height = 15,
width = 30,
units = "cm",
dpi = 300)
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 10,
width = 20,
units = "cm",
dpi = 300)
### Library
library(tidyverse)
library(here)
library(lubridate)
library(ggh4x)
effort_list <- c("2020_passerine_effort.csv",
"2021_passerine_effort.csv",
"2022_passerine_effort.csv")
effort_all <- tibble()
for (file in effort_list) {
effort_temp <- read_csv(here("data", "JPRF_aru_effort", file))
effort_all <- rbind(effort_all, effort_temp)
}
effort_all_1 <- effort_all %>%
unite(col = date, year, month, day, remove = FALSE) %>%
mutate(date = ymd(date)) %>%
mutate(month = as.numeric(month),
day = as.numeric(day),
hour = as.numeric(hour),
minute = as.numeric(minute)) %>%
filter(size >= 5760000 & size <= 5760500,
year >= 2020 & year <= 2022,
month >= 5 & month <= 7,
hour %in% c(4, 5, 6),
minute %in% seq(0, 60, by = 5))
effort_break <- effort_all_1 %>%
group_by(year) %>%
summarize(start = min(date),
end = max(date))
effort_all_2 <- effort_all_1 %>%
group_nest(date) %>%
mutate(ARUs = map_dbl(.x = data, .f =~ .x %>% pull(site) %>% n_distinct()),
year = map_dbl(.x = data, .f =~ .x %>% pull(year) %>% unique()),
yday = yday(date)) %>%
ggplot(aes(x = yday, y = ARUs)) +
geom_line() +
geom_point(shape = 16, alpha = 0.5) +
# geom_bar(stat = "identity") +
facet_grid(rows = vars(year)) +
theme_bw() +
labs(x = "Day of a year", y = "# of ARU") +
scale_y_continuous(breaks = c(10, 40)) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = effort_all_2,
filename = here("docs", "figures", "effort_all_2.png"),
height = 10,
width = 20,
units = "cm",
dpi = 300)
